---
/**
 * Catch-all route handler
 * 
 * This component handles various URL patterns to ensure consistency between environments,
 * particularly for episode content. It standardizes URLs to match production format.
 */
import MainLayout from '../layouts/MainLayout.astro';

// We must define getStaticPaths for all catch-all routes in static mode
export function getStaticPaths() {
  // Define known episode redirects
  const episodePaths = [];
  
  // Create paths for all episodes in both formats (1-20)
  for (let i = 1; i <= 20; i++) {
    const paddedNum = i.toString().padStart(2, '0');
    
    // Add path for /episodes/ep1 format
    episodePaths.push({
      params: { path: `episodes/ep${i}` },
      props: { redirectTo: `/pages/ep${paddedNum}` }
    });
    
    // Add path for /episodes/ep01 format
    episodePaths.push({
      params: { path: `episodes/ep${paddedNum}` },
      props: { redirectTo: `/pages/ep${paddedNum}` }
    });
  }
  
  // Return both episode paths and a fallback 404 handler
  return [
    ...episodePaths,
    // Catch-all 404 fallback
    {
      params: { path: 'unknown' },
      props: { redirectTo: null }
    }
  ];
}

const { path } = Astro.params;
const { redirectTo } = Astro.props;

// Perform redirect if needed
if (redirectTo) {
  return Astro.redirect(redirectTo, 301);
}

// Default 404 response for unhandled paths
Astro.response.status = 404;
---

<MainLayout title="Page Not Found">
  <div class="not-found-container">
    <h1>404 - Page Not Found</h1>
    <p>The page you're looking for doesn't exist.</p>
    <p><a href="/pages/">Return to Home</a></p>
  </div>
</MainLayout>

<style>
  .not-found-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
    text-align: center;
  }
  
  h1 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  
  a {
    color: #0070f3;
    text-decoration: none;
  }
  
  a:hover {
    text-decoration: underline;
  }
</style>
