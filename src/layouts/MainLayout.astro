---
// Import components
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Define props interface
interface Props {
	title: string;
}

// Get props
const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="AI Tools and Experiments Showcase">
	<link rel="icon" type="image/png" href="/images/ai-tools-lab-logo.png"> 
	<meta name="generator" content={Astro.generator}>
	<title>{title} | AI Tools Experiments</title>

	<!-- Link to external fonts if needed, e.g., Google Fonts -->
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Revalia&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/styles.css" />
 
</head>
<body>
	<Header />
	<main class="container">
		<slot /> <!-- Page content will be injected here -->
	</main>
	<Footer />
	<script>
		// Add any global client-side scripts here if necessary
		// Example: Mobile nav toggle
		const hamburger = document.querySelector('.hamburger-menu');
		const mobileNav = document.querySelector('.mobile-nav');
		const overlay = document.querySelector('.overlay');

		if (hamburger && mobileNav && overlay) {
			hamburger.addEventListener('click', () => {
				hamburger.classList.toggle('active');
				mobileNav.classList.toggle('open');
				overlay.classList.toggle('active');
				document.body.style.overflow = mobileNav.classList.contains('open') ? 'hidden' : ''; // Prevent scrolling when nav is open
			});

			overlay.addEventListener('click', () => {
				hamburger.classList.remove('active');
				mobileNav.classList.remove('open');
				overlay.classList.remove('active');
				document.body.style.overflow = '';
			});

			// Close mobile nav on link click
			const navLinks = mobileNav.querySelectorAll('a');
			navLinks.forEach(link => {
				link.addEventListener('click', () => {
					hamburger.classList.remove('active');
					mobileNav.classList.remove('open');
					overlay.classList.remove('active');
					document.body.style.overflow = '';
				});
			});
		}
	</script>
	<script>
		  // Initialize Datadog RUM (Keep the first instance)
		  if (typeof window !== 'undefined' && window.DD_RUM) {
			// Note: Using the credentials from the first block found earlier
			window.DD_RUM.init({
			  clientToken: 'pub501e7bdae51f592b13b33adf351655a3', 
			  applicationId: 'db2aad17-02cf-4e95-bee7-09293dd29f1a',
			  site: 'datadoghq.com',
			  service: 'ai-tools-lab', // Match the service name from first block
			  env: import.meta.env.MODE, // 'development' or 'production'
			  version: '1.0.0', // Optional version
			  sessionSampleRate: 100,
			  sessionReplaySampleRate: 20,
			  trackUserInteractions: true,
			  trackResources: true,
			  trackLongTasks: true,
			  defaultPrivacyLevel: 'mask-user-input'
			});

			window.DD_RUM.startSessionReplayRecording();
		  }

		  // Initialize the easter egg functionality
		  function initializeEasterEgg() {
			  const easterEgg = document.getElementById('easter-egg');
			  const modal = document.getElementById('easter-egg-modal');
			  const closeBtn = document.querySelector('.easter-egg-close');
			  
			  if (!easterEgg || !modal || !closeBtn) return;
			  
			  // Show modal when Pi symbol is clicked
			  easterEgg.addEventListener('click', function() {
				  modal.style.display = 'flex';
				  setTimeout(() => {
					  modal.classList.add('show');
				  }, 10);
			  });
			  
			  // Close modal when X is clicked
			  closeBtn.addEventListener('click', function() {
				  modal.classList.remove('show');
				  setTimeout(() => {
					  modal.style.display = 'none';
				  }, 300);
			  });
			  
			  // Close modal when clicking outside of it
			  modal.addEventListener('click', function(event) {
				  if (event.target === modal) {
					  modal.classList.remove('show');
					  setTimeout(() => {
						  modal.style.display = 'none';
					  }, 300);
				  }
			  });
		  }

		  document.addEventListener('DOMContentLoaded', function() {
			initializeEasterEgg();
		  });
		</script>
 </body>
 </html>
