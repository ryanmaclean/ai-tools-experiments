--- 
// src/components/ResourceCard.astro
import fs from 'fs';
import path from 'path';

// Component props
export interface Props {
  resource: {
    title: string;
    description: string;
    imagePath: string; // Path relative to /public, e.g., /images/foo.png
    link: string;
    date: string;
    source: string;
    category: string;
    tags: string[];
  };
}

const { resource } = Astro.props;

let imageAlt = resource.title; // Use title as alt text
let imageSrc = resource.imagePath; // Default fallback path

// Check if the image exists in the public directory
const publicImagePath = path.join(process.cwd(), 'public', resource.imagePath);
const placeholderPath = '/images/resource-placeholder.png';

try {
  const imageExists = fs.existsSync(publicImagePath);
  if (!imageExists) {
    console.warn(`Image not found for ResourceCard: ${publicImagePath}`);
    imageSrc = placeholderPath;
    imageAlt = "Placeholder image";
  }
} catch (error) {
  console.error(`Error checking image for ResourceCard (${resource.title}): ${publicImagePath}`, error);
  imageSrc = placeholderPath;
}

const tagsString = resource.tags.join(',');
---

<div class="resource-card" data-category={resource.category} data-tags={tagsString}>
  <a href={resource.link} target="_blank" rel="noopener noreferrer">
    <div class="resource-card-image">
      <img
        src={imageSrc}
        alt={imageAlt}
        width="300"
        height="180"
        loading="lazy"
        decoding="async"
        fetchpriority="low"
        style="object-fit: cover;"
      />
    </div>
    <div class="resource-card-content">
      <h2>{resource.title}</h2>
      <p>{resource.description}</p>
      <div class="resource-meta">
        <span class="resource-date">{resource.date}</span>
        <span class="resource-source">{resource.source}</span>
      </div>
    </div>
  </a>
</div>
