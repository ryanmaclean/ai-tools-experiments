/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 */
import { ScheduleCreateRequestDataAttributesLayersItemsInterval } from "./ScheduleCreateRequestDataAttributesLayersItemsInterval";
import { ScheduleCreateRequestDataAttributesLayersItemsMembersItems } from "./ScheduleCreateRequestDataAttributesLayersItemsMembersItems";
import { ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItems } from "./ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItems";
import { AttributeTypeMap } from "../../datadog-api-client-common/util";
/**
 * Describes a schedule layer, including rotation intervals, members, restrictions, and timeline settings.
 */
export declare class ScheduleCreateRequestDataAttributesLayersItems {
    /**
     * The date/time when this layer becomes active (in ISO 8601).
     */
    "effectiveDate": Date;
    /**
     * The date/time after which this layer no longer applies (in ISO 8601).
     */
    "endDate"?: Date;
    /**
     * Defines how frequently the rotation repeats, using days and/or seconds (up to certain limits).
     */
    "interval": ScheduleCreateRequestDataAttributesLayersItemsInterval;
    /**
     * A list of members who participate in this layer's rotation.
     */
    "members": Array<ScheduleCreateRequestDataAttributesLayersItemsMembersItems>;
    /**
     * The name of this layer.
     */
    "name": string;
    /**
     * Zero or more time-based restrictions (for example, only weekdays, during business hours).
     */
    "restrictions"?: Array<ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItems>;
    /**
     * The date/time when the rotation for this layer starts (in ISO 8601).
     */
    "rotationStart": Date;
    /**
     * A container for additional, undeclared properties.
     * This is a holder for any undeclared properties as specified with
     * the 'additionalProperties' keyword in the OAS document.
     */
    "additionalProperties"?: {
        [key: string]: any;
    };
    /**
     * @ignore
     */
    "_unparsed"?: boolean;
    /**
     * @ignore
     */
    static readonly attributeTypeMap: AttributeTypeMap;
    /**
     * @ignore
     */
    static getAttributeTypeMap(): AttributeTypeMap;
    constructor();
}
