Test: Visual LLM
Date: 2025-05-05T22:16:12.265Z
Duration: 5.97 seconds
Exit Code: 0
Status: PASSED

OUTPUT:
Datadog API keys not found, metrics will not be sent
Starting Visual LLM-assisted tests...

Analyzing about page...
Comparing /Users/string/ai-tools-experiments/tests/llm-screenshots/about-local-analysis.png vs /Users/string/ai-tools-experiments/tests/llm-screenshots/about-prod-simulated.png using Ollama vision model...
Error calling Ollama API: AxiosError [AggregateError]
    at AxiosError.from (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:863:14)
    at RedirectableRequest.handleRequestError (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:3187:25)
    at RedirectableRequest.emit (node:events:507:28)
    at eventHandlers.<computed> (/Users/string/ai-tools-experiments/node_modules/follow-redirects/index.js:49:24)
    at ClientRequest.emit (node:events:507:28)
    at emitErrorEvent (node:_http_client:104:11)
    at Socket.socketErrorListener (node:_http_client:518:5)
    at Socket.emit (node:events:507:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at Axios.request (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:4276:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async comparePagesVisually (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:104:24)
    at async runVisualLLMTests (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:256:32) {
  code: 'ECONNREFUSED',
  errors: [
    Error: connect ECONNREFUSED ::1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '::1',
      port: 11434
    },
    Error: connect ECONNREFUSED 127.0.0.1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 11434
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '284553',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://localhost:11434/api/generate',
    data: `{"model":"llama3.2-vision","prompt":"\\n      I'm showing you two screenshots of the same web page. \\n      The first is from a test environment, the second is from production.\\n      \\n      Please analyze these images and tell me:\\n      1. Are there any visual differences between them?\\n      2. If there are differences, describe them in detail\\n      3. Rate the visual similarity on a scale of 0-10 where 10 is identical\\n      4. Are there any UI elements missing or incorrectly styled?\\n      5. Is the content structured the same way in both versions?\\n      \\n      Please be specific and detailed in your analysis.\\n    ","images":["`... 274553 more characters,
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'http:',
      path: '/api/generate',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'localhost',
      port: '11434',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/generate'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 284553,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 284553,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/generate HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 284553\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: localhost:11434\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/generate',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: true,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [Socket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'http://localhost:11434/api/generate',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ECONNREFUSED]: 
      at internalConnectMultiple (node:net:1139:18)
      at afterConnectMultiple (node:net:1714:7) {
    code: 'ECONNREFUSED',
    [errors]: [ [Error], [Error] ]
  }
}
Falling back to ImageMagick comparison...
- Structure analysis: {
  "title": "FailedToLoadModuleSSR",
  "headerExists": false,
  "footerExists": false,
  "mainContentExists": false,
  "hasImages": false,
  "hasLinks": false,
  "hasText": false,
  "totalElements": 6
}
- Visual comparison result: Fallback analysis using ImageMagick (Ollama not available): Pages appear visually identical or have negligible differences.
- Conclusion: Page visually matches expected output

Analyzing resources page...
Comparing /Users/string/ai-tools-experiments/tests/llm-screenshots/resources-local-analysis.png vs /Users/string/ai-tools-experiments/tests/llm-screenshots/resources-prod-simulated.png using Ollama vision model...
Error calling Ollama API: AxiosError [AggregateError]
    at AxiosError.from (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:863:14)
    at RedirectableRequest.handleRequestError (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:3187:25)
    at RedirectableRequest.emit (node:events:507:28)
    at eventHandlers.<computed> (/Users/string/ai-tools-experiments/node_modules/follow-redirects/index.js:49:24)
    at ClientRequest.emit (node:events:507:28)
    at emitErrorEvent (node:_http_client:104:11)
    at Socket.socketErrorListener (node:_http_client:518:5)
    at Socket.emit (node:events:507:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at Axios.request (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:4276:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async comparePagesVisually (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:104:24)
    at async runVisualLLMTests (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:256:32) {
  code: 'ECONNREFUSED',
  errors: [
    Error: connect ECONNREFUSED ::1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '::1',
      port: 11434
    },
    Error: connect ECONNREFUSED 127.0.0.1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 11434
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '281417',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://localhost:11434/api/generate',
    data: `{"model":"llama3.2-vision","prompt":"\\n      I'm showing you two screenshots of the same web page. \\n      The first is from a test environment, the second is from production.\\n      \\n      Please analyze these images and tell me:\\n      1. Are there any visual differences between them?\\n      2. If there are differences, describe them in detail\\n      3. Rate the visual similarity on a scale of 0-10 where 10 is identical\\n      4. Are there any UI elements missing or incorrectly styled?\\n      5. Is the content structured the same way in both versions?\\n      \\n      Please be specific and detailed in your analysis.\\n    ","images":["`... 271417 more characters,
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'http:',
      path: '/api/generate',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'localhost',
      port: '11434',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/generate'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 281417,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 281417,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/generate HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 281417\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: localhost:11434\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/generate',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: true,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [Socket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'http://localhost:11434/api/generate',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ECONNREFUSED]: 
      at internalConnectMultiple (node:net:1139:18)
      at afterConnectMultiple (node:net:1714:7) {
    code: 'ECONNREFUSED',
    [errors]: [ [Error], [Error] ]
  }
}
Falling back to ImageMagick comparison...
- Structure analysis: {
  "title": "FailedToLoadModuleSSR",
  "headerExists": false,
  "footerExists": false,
  "mainContentExists": false,
  "hasImages": false,
  "hasLinks": false,
  "hasText": false,
  "totalElements": 6
}
- Visual comparison result: Fallback analysis using ImageMagick (Ollama not available): Pages appear visually identical or have negligible differences.
- Conclusion: Page visually matches expected output

Analyzing observations page...
Comparing /Users/string/ai-tools-experiments/tests/llm-screenshots/observations-local-analysis.png vs /Users/string/ai-tools-experiments/tests/llm-screenshots/observations-prod-simulated.png using Ollama vision model...
Error calling Ollama API: AxiosError [AggregateError]
    at AxiosError.from (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:863:14)
    at RedirectableRequest.handleRequestError (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:3187:25)
    at RedirectableRequest.emit (node:events:507:28)
    at eventHandlers.<computed> (/Users/string/ai-tools-experiments/node_modules/follow-redirects/index.js:49:24)
    at ClientRequest.emit (node:events:507:28)
    at emitErrorEvent (node:_http_client:104:11)
    at Socket.socketErrorListener (node:_http_client:518:5)
    at Socket.emit (node:events:507:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at Axios.request (/Users/string/ai-tools-experiments/node_modules/axios/dist/node/axios.cjs:4276:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async comparePagesVisually (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:104:24)
    at async runVisualLLMTests (/Users/string/ai-tools-experiments/tests/visual-llm-test.js:256:32) {
  code: 'ECONNREFUSED',
  errors: [
    Error: connect ECONNREFUSED ::1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '::1',
      port: 11434
    },
    Error: connect ECONNREFUSED 127.0.0.1:11434
        at createConnectionError (node:net:1677:14)
        at afterConnectMultiple (node:net:1707:16) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 11434
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '279817',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://localhost:11434/api/generate',
    data: `{"model":"llama3.2-vision","prompt":"\\n      I'm showing you two screenshots of the same web page. \\n      The first is from a test environment, the second is from production.\\n      \\n      Please analyze these images and tell me:\\n      1. Are there any visual differences between them?\\n      2. If there are differences, describe them in detail\\n      3. Rate the visual similarity on a scale of 0-10 where 10 is identical\\n      4. Are there any UI elements missing or incorrectly styled?\\n      5. Is the content structured the same way in both versions?\\n      \\n      Please be specific and detailed in your analysis.\\n    ","images":["`... 269817 more characters,
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'http:',
      path: '/api/generate',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'localhost',
      port: '11434',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/generate'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 279817,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 279817,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/generate HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 279817\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: localhost:11434\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/generate',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: true,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [Socket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'http://localhost:11434/api/generate',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ECONNREFUSED]: 
      at internalConnectMultiple (node:net:1139:18)
      at afterConnectMultiple (node:net:1714:7) {
    code: 'ECONNREFUSED',
    [errors]: [ [Error], [Error] ]
  }
}
Falling back to ImageMagick comparison...
- Structure analysis: {
  "title": "FailedToLoadModuleSSR",
  "headerExists": false,
  "footerExists": false,
  "mainContentExists": false,
  "hasImages": false,
  "hasLinks": false,
  "hasText": false,
  "totalElements": 6
}
- Visual comparison result: Fallback analysis using ImageMagick (Ollama not available): Pages appear visually identical or have negligible differences.
- Conclusion: Page visually matches expected output

Visual similarity summary:
- about: 0.0000 difference score
- observations: 0.0000 difference score
- resources: 0.0000 difference score

LLM-assisted visual tests completed!
LLM-assisted visual tests completed successfully!

