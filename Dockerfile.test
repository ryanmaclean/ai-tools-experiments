# Dockerfile.test for AI Tools Lab visual testing
# Using Ubuntu LTS for better compatibility with native modules and browser tests
# Maintained in ryanmaclean/ai-tools-experiments repository
FROM node:22.15-bullseye-slim

# Set up environment
ENV NODE_ENV=test
ENV DEBIAN_FRONTEND=noninteractive

# Install base dependencies for test environment
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    python3 \
    build-essential \
    imagemagick \
    bash \
    # Test and visual comparison requirements
    chromium \
    fonts-freefont-ttf \
    # Canvas dependencies
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    # Clean up to reduce image size
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Update npm to latest version (11.3.0 as of May 2025)
RUN npm install -g npm@11.3.0

# Set environment variables for Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Set working directory
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
COPY .npmrc ./

# Fix for Rollup ARM64 issue (https://github.com/npm/cli/issues/4828)
RUN echo '{"name":"rollup-fix","dependencies":{"@rollup/rollup-linux-arm64-gnu":"latest"}}' > rollup-fix.json \
    && npm install --no-save --no-package-lock -f --prefix ./rollup-fix $(pwd)/rollup-fix.json \
    && mkdir -p node_modules/@rollup/ \
    && cp -r rollup-fix/node_modules/@rollup/rollup-linux-arm64-gnu node_modules/@rollup/ || true

# Use npm install instead of npm ci to handle testing dependencies properly
RUN npm install --omit=optional
RUN npm install -D \
    @datadog/browser-rum \
    @datadog/datadog-ci \
    vite-plugin-datadog-ci

# Copy test files and configuration
COPY tests ./tests
COPY vitest.config.js ./

# Create directories for test artifacts
RUN mkdir -p ./test-results ./coverage ./tests/screenshots/local ./tests/screenshots/prod ./tests/screenshots/diff

# Set environment variables
ENV NODE_ENV=test

# Command to run the tests
CMD ["npm", "run", "test:visual"]
