# Development Dockerfile for AI Tools Lab
# Optimized for hot-reloading and development experience
# Maintained in ryanmaclean/ai-tools-experiments repository
# Last updated: 2025-05-04

# ARCHITECTURE COMPATIBILITY NOTES:
# This Dockerfile is designed to work on both x86 and ARM architectures
# Using official Node 22 image for better compatibility

FROM node:22.15-bullseye-slim

# Set environment variables
ARG DEBIAN_FRONTEND=noninteractive
ARG NODE_ENV

# Install additional dependencies for native modules
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    python3 \
    build-essential \
    # Canvas dependencies
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    # Puppeteer dependencies
    chromium \
    fonts-freefont-ttf \
    # Improve ARM64 compatibility
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Update npm to latest version (11.3.0 as of May 2025)
RUN npm install -g npm@11.3.0

# Configure environment for Puppeteer
# Using system Chromium for better ARM compatibility and container size reduction
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Set working directory
WORKDIR /app

# Install dependencies (optimized for caching)
COPY package*.json ./
COPY .npmrc ./

# Fix for Rollup ARM64 issue (https://github.com/npm/cli/issues/4828)
RUN mkdir -p rollup-fix \
    && echo '{"name":"rollup-fix","dependencies":{"@rollup/rollup-linux-arm64-gnu":"latest"}}' > rollup-fix/package.json \
    && cd rollup-fix && npm install --no-save --no-package-lock -f \
    && cd .. && mkdir -p node_modules/@rollup/ \
    && cp -r rollup-fix/node_modules/@rollup/rollup-linux-arm64-gnu node_modules/@rollup/ || true

# Install dependencies but skip optional ones which can cause build issues
# Use npm install instead of npm ci to handle version updates properly
RUN npm install --omit=optional --no-audit

# We don't copy the source here - docker-compose will mount it
# This enables hot reloading without container rebuilds

# Expose the port that Astro dev server runs on
EXPOSE 4321 4322 4323 4324 4325

# Command to run the dev server with host binding for container access
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
