name: CI/CD Pipeline

on:
  push:
    branches: [main, test]
  pull_request:
    branches: [main, test]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v3.5.0
      
      - name: Set up Node.js
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v2.0.0
      
      - name: Build Docker image
        run: docker-compose build
      
      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libasound2
      
      - name: Install Puppeteer
        run: npm install --save-dev puppeteer
      
      - name: Configure Datadog Test Optimization
        id: datadog-test-visibility
        uses: datadog/test-visibility-github-action@f9c37a3e981cfcd76b29a38bc1071d36485be55f # v2.0.4
        with:
          languages: js
          api_key: ${{ secrets.DD_API_KEY || '' }}
          site: datadoghq.com
      
      - name: Start Docker container
        run: docker-compose up -d
      
      - name: Wait for container to be ready
        run: sleep 10
      
      - name: Run multithreaded tests
        run: npm run synthetics:parallel:ci
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY || '' }}
          DD_TEST_REPORT: 'true'
          NODE_OPTIONS: -r ${{ steps.datadog-test-visibility.outputs.dd-trace-package }} --import ${{ steps.datadog-test-visibility.outputs.dd-trace-esm-import }}
          MAX_WORKERS: 4
          MAX_RETRIES: 2
      
      - name: Run basic Puppeteer tests
        run: node ./tests/docker-build-test.js
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY || '' }}
          DD_TEST_REPORT: 'true'
          NODE_OPTIONS: -r ${{ steps.datadog-test-visibility.outputs.dd-trace-package }} --import ${{ steps.datadog-test-visibility.outputs.dd-trace-esm-import }}
      
      - name: Run comprehensive site tests
        run: node ./tests/comprehensive-site-test.js
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY || '' }}
          NODE_OPTIONS: -r ${{ steps.datadog-test-visibility.outputs.dd-trace-package }} --import ${{ steps.datadog-test-visibility.outputs.dd-trace-esm-import }}
      
      - name: Stop Docker container
        run: docker-compose down
      
      - name: Upload screenshots as artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v4.3.1
        with:
          name: test-screenshots
          path: tests/screenshots/
          retention-days: 7
  
  deploy:
    name: Deploy to Netlify
    needs: test
    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test')
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Netlify build hook
        run: curl -X POST -d {} https://api.netlify.com/build_hooks/6815aa2896ae6ddba51a8a30
      
      - name: Notify on success
        run: echo "Successfully triggered Netlify deployment"
