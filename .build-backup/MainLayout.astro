---
// Import components
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { DATADOG_CONFIG } from '../js/datadog-config.js';

// Define props interface
interface Props {
	title: string;
}

// Get props
const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="AI Tools and Experiments Showcase">
	<link rel="icon" type="image/webp" href="/images/ai-tools-lab-logo.webp"> 
	<meta name="generator" content={Astro.generator}>
	<title>{title} | AI Tools Experiments</title>

	<!-- Link to external fonts if needed, e.g., Google Fonts -->
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Revalia&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/styles.css?v=1.0.1" /> <!-- Added version parameter for cache busting -->
 
	<!-- Datadog RUM monitoring - Using is:inline for Astro SSR compatibility -->
	<script is:inline>
		// Datadog config as JSON string since we can't directly import in inline scripts
		const datadogConfig = {
		  clientToken: 'pub3ab714d81ea179c4cf78b41467d1090b',
		  applicationId: '719fdc0f-589e-4c5a-bf1c-fa42f53208fd',
		  site: 'datadoghq.com',
		  service: 'ai-tools-lab',
		  // Environment detection based on hostname
		  env: function() {
		    if (window.location.hostname.includes('ai-tools-lab-tst.netlify.app')) {
		      return 'staging';
		    } else if (window.location.hostname.includes('ai-tools-lab.com')) {
		      return 'production';
		    } else {
		      return 'development';
		    }
		  }(),
		  // Session configuration
		  sessionSampleRate: 100,
		  sessionReplaySampleRate: 100,
		  trackResources: true,
		  trackLongTasks: true,
		  trackUserInteractions: true,
		  defaultPrivacyLevel: 'mask-user-input'
		};

		// Only initialize if not already done
		if (!window.DD_RUM_INITIALIZED) {
		  (function(h,o,u,n,d) {
		    h=h[d]=h[d]||{q:[],onReady:function(c){h.q.push(c)}};
		    d=o.createElement(u);d.async=1;d.src=n;
		    n=o.getElementsByTagName(u)[0];n.parentNode.insertBefore(d,n);
		  })(window,document,'script','https://www.datadoghq-browser-agent.com/us1/v5/datadog-rum.js','DD_RUM');
		  
		  window.DD_RUM.onReady(function() {
		    window.DD_RUM.init(datadogConfig);
		    // Mark as initialized to prevent duplicate initialization
		    window.DD_RUM_INITIALIZED = true;
		    // Log successful initialization to console
		    console.log('[Datadog] RUM initialized successfully');
		  });
		}
	</script>
</head>
<body>
	<a href="#main-content" class="skip-link">Skip to main content</a>
	<Header />
	<main id="main-content" role="main">
		<slot /> <!-- Page content will be injected here -->
	</main>
	<Footer />
	<script is:inline>
		// Simple script to ensure header and footer are accessible
		console.log("Build mode"); /* console.log("Build mode"); /* document.addEventListener('DOMContentLoaded', () => {
			// Toggle mobile menu if elements exist
			const hamburger = /* /* document.querySelector('.hamburger-menu');
			const mobileNav = /* /* document.querySelector('.mobile-nav');
			
			if (hamburger && mobileNav) {
				hamburger.addEventListener('click', () => {
					mobileNav.classList.toggle('open');
				});
			}
		});
	</script>
 </body>
 </html>
